<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2019-04-30 14:01:05">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Service Portal Surveys">67ac5062db10220035417878f0b8f5c4</application>
<application_name>Service Portal Surveys</application_name>
<application_scope>sn_portal_surveys</application_scope>
<application_version>1.0.0</application_version>
<collisions/>
<commit_date/>
<deleted/>
<description>Automatically created by the system</description>
<inserted/>
<name>Default</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>72cfc26437fcb30002c87e5004990eec</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2019-04-30 14:01:05</sys_created_on>
<sys_id>8a3b6ff23705730002c87e5004990e00</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2019-04-30 14:01:05</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Service Portal Surveys">67ac5062db10220035417878f0b8f5c4</application>
<category>customer</category>
<comments/>
<name>sp_widget_04b1cc07c3231200e44574e1c1d3ae96</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;other&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($rootScope,$timeout) {
  // widget controller
  var c = this;
	var bc = [{label: c.data.widgetTitle, url: '#'}];
	$timeout(function() {
		$rootScope.$broadcast('sp.update.breadcrumbs', bc);
	});
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.instance-display-text{&amp;#13;
  padding:2px;&amp;#13;
}&amp;#13;
&amp;#13;
.survey-panel-spacer{&amp;#13;
  margin : 24px;&amp;#13;
}&amp;#13;
&amp;#13;
.survey-title {&amp;#13;
  font-weight: bold;&amp;#13;
}&amp;#13;
&amp;#13;
.survey-title a {&amp;#13;
  color:black;&amp;#13;
}&amp;#13;
&amp;#13;
.card-bottom {&amp;#13;
  margin-top:9px;&amp;#13;
}&amp;#13;
&amp;#13;
.progress-bar, .progress-bar-inner {&amp;#13;
  width:100%;&amp;#13;
  height:9px;&amp;#13;
  border-radius:4px;&amp;#13;
}&amp;#13;
&amp;#13;
.progress-bar {&amp;#13;
  background:#BDC3C7;&amp;#13;
  margin-top:5px;&amp;#13;
}&amp;#13;
&amp;#13;
.progress-bar-inner {&amp;#13;
  background:#278efc;&amp;#13;
}&amp;#13;
&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;surveys&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;My Surveys&lt;/name&gt;&lt;option_schema&gt;[{"name":"maxRecords","section":"Presentation","label":"Max Records","type":"integer"},{"name":"widgetTitle","section":"Presentation","label":"Title of the Widget","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
  // populate the 'data' object
  // e.g., data.table = $sp.getValue('table');
	data.maxRecords = options.maxRecords || 5;
	var sp = new SPSurveyAPI();
	options.showAll = $sp.getParameter('id') == 'my_surveys';
	if($sp.getParameter('id') != 'my_surveys'){
		if(options.widgetTitle &amp;&amp; options.widgetTitle.length&gt;0){
			data.widgetTitle = options.widgetTitle;
		}else{
			data.widgetTitle = gs.getMessage("My Surveys");
		}
		data.encodedWidgetTitle = encodeURIComponent(data.widgetTitle);
	} else{
		data.widgetTitle = $sp.getParameter('title') || gs.getMessage("Surveys");
	}
	
	sp.getSurveys(data.maxRecords, options.showAll, data);
	data.instances.forEach(function(instance) {
		if (!!instance.description)
			instance.description = $sp.stripHTML(instance.description);
	});

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-05-26 21:09:17&lt;/sys_created_on&gt;&lt;sys_id&gt;04b1cc07c3231200e44574e1c1d3ae96&lt;/sys_id&gt;&lt;sys_mod_count&gt;176&lt;/sys_mod_count&gt;&lt;sys_name&gt;My Surveys&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal Surveys" source="sn_portal_surveys"&gt;67ac5062db10220035417878f0b8f5c4&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Service Portal Surveys"&gt;67ac5062db10220035417878f0b8f5c4&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_04b1cc07c3231200e44574e1c1d3ae96&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;fernando.souza&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-10 21:21:23&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if="!(options.showAll &amp;&amp; options.showAll != 'false' &amp;&amp; data.instances.length &amp;&amp; data.totalRecords == data.maxRecords &amp;&amp; data.totalRecords != 0)"&gt;
	&lt;div class="panel panel-default"&gt;
		&lt;div class="panel-heading"&gt;
			&lt;h4 class="panel-title"&gt;{{::data.widgetTitle}}&lt;/h4&gt; 
		&lt;/div&gt;
			&lt;div class="list-group" ng-if="data.instances.length &amp;&amp; data.totalRecords &gt; 0"&gt;
				&lt;div class="list-group-item" ng-repeat="instance in data.instances track by $index"&gt;
					&lt;div&gt;
						&lt;a href="?id=take_survey&amp;instance_id={{::instance.sys_id}}" title = "Take {{::instance.evaluation_method_display}}"&gt;
                          &lt;table&gt;&lt;tr&gt;
                          &lt;td&gt;&lt;span  class = "survey-icon icon-article-document"
                                  ng-if="(instance.evaluation_method == 'assessment' || instance.evaluation_method == 'attestation_v2' || instance.evaluation_method == 'risk_assessment')"&gt;&lt;/span&gt;
                            &lt;span ng-if="(instance.evaluation_method == 'survey' || instance.evaluation_method == 'quiz')" class="survey-icon icon-form"&gt;&lt;/span&gt;&lt;/td&gt;
                          &lt;td class="instance-display-text"&gt;{{::instance.display}}&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
                      &lt;/a&gt;
					&lt;/div&gt;
					&lt;div&gt;
						&lt;small ng-if="instance.trigger_id"&gt;
							&lt;a style="color:inherit;text-decoration:underline" href="?id=ticket&amp;table={{::instance.trigger_table}}&amp;sys_id={{::instance.trigger_id}}"&gt;{{::instance.trigger_display}}&lt;/a&gt;
							&lt;span&gt; â€¢ &lt;/span&gt;
						&lt;/small&gt;
						&lt;small&gt;
							&lt;span&gt;{{::instance.due_display}}&lt;/span&gt;
						&lt;/small&gt;
					&lt;/div&gt;

				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div ng-if="data.totalRecords ==0" class="panel-body ng-scope"&gt;
				${You have no surveys to take}
			&lt;/div&gt;
			&lt;div class="panel-footer" ng-if="data.totalRecords &gt; data.maxRecords"&gt;
				&lt;h4 class="panel-title row"&gt;
					&lt;div class="col-xs-6"&gt;
						&lt;span&gt;{{::data.recordsShownMsg}}&lt;/span&gt;
					&lt;/div&gt;
					&lt;div class="col-xs-6 text-right"&gt;
						&lt;a href="?id=my_surveys&amp;title={{::data.encodedWidgetTitle}}"&gt;${View all}&lt;/a&gt;
					&lt;/div&gt;
			 	&lt;/h4&gt;
			&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;

&lt;div ng-if="options.showAll &amp;&amp; options.showAll != 'false' &amp;&amp; data.instances.length &amp;&amp; data.totalRecords == data.maxRecords &amp;&amp; data.totalRecords != 0"&gt;
  &lt;div class = "survey-panel-spacer"/&gt;
  &lt;h2&gt;{{::data.widgetTitle}}&lt;/h2&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-sm-6 col-md-4 wrapper-xs" ng-repeat="instance in data.instances track by $index"&gt;
      &lt;div class="panel panel-default wrapper-sm"&gt;

        &lt;div class="row"&gt;
          &lt;div class="col-xs-12 survey-title" style="height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap"&gt;
            &lt;a href="?id=take_survey&amp;instance_id={{::instance.sys_id}}" title = "Take {{::instance.evaluation_method_display}}"&gt;
                          &lt;table&gt;&lt;tr&gt;
                          &lt;td&gt;&lt;span  class = "survey-icon icon-article-document"
                                  ng-if="(instance.evaluation_method == 'assessment' || instance.evaluation_method == 'attestation_v2' || instance.evaluation_method == 'risk_assessment')"&gt;&lt;/span&gt;
                            &lt;span ng-if="(instance.evaluation_method == 'survey' || instance.evaluation_method == 'quiz')" class="survey-icon icon-form"&gt;&lt;/span&gt;&lt;/td&gt;
                          &lt;td class="instance-display-text"&gt;{{::instance.display}}&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
          &lt;/a&gt;    
          &lt;/div&gt;
          &lt;div class="col-xs-12" ng-if="instance.trigger_description" style="height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap"&gt;
            {{::instance.trigger_description}}
          &lt;/div&gt;
          &lt;div class="col-xs-12" ng-if="!instance.trigger_description" style="height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap"&gt;
            {{::instance.description}}
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class="card-bottom" style="font-size:12px;"&gt;

          &lt;div class="row"&gt;
            &lt;div class="col-xs-8" style="height:17px;"&gt;
							&lt;span ng-if="instance.can_retake"&gt;${Completed. Do you want to retake?}&lt;/span&gt;
            &lt;/div&gt;
            &lt;div class="col-xs-4 text-right" style="height:17px"&gt;
              &lt;a  ng-if="instance.trigger_table_display" href="?id=ticket&amp;table={{::instance.trigger_table}}&amp;sys_id={{::instance.trigger_id}}"&gt;{{::instance.trigger_display}}&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;

          &lt;div class="row"&gt;
            &lt;div class="col-xs-8"&gt;
              &lt;div class="progress-bar" ng-if="instance.percent_answered &gt; '0'"&gt;
                &lt;div class="progress-bar-inner" ng-style="{width: instance.percent_answered + '%'}"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="col-xs-4 text-right"&gt;
              &lt;div class="due-date"&gt;{{::instance.due_display}}&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;

        &lt;/div&gt; &lt;!-- end div.card-bottom --&gt;

      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1677592534</payload_hash>
<remote_update_set display_value="Default">8a3b6ff23705730002c87e5004990e00</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2019-04-30 14:01:05</sys_created_on>
<sys_id>463b6ff23705730002c87e5004990e01</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a092075550000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2019-04-30 14:01:05</sys_updated_on>
<table/>
<target_name>My Surveys</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>41309ea43ffcb30083f8f6fc42a2bebd</update_guid>
<update_guid_history>41309ea43ffcb30083f8f6fc42a2bebd:1677592534,f6cf8aa4cffcb300b83a12a42f430146:-888096426,3ecfc26447fcb30018d9d14836bc33ea:-1531120072</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Service Portal Surveys">67ac5062db10220035417878f0b8f5c4</application>
<category>customer</category>
<comments/>
<name>sp_angular_provider_aaf3cd03c3602200943974e1c1d3ae87</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_angular_provider"&gt;&lt;sp_angular_provider action="INSERT_OR_UPDATE"&gt;&lt;name&gt;spSurveyForm&lt;/name&gt;&lt;script&gt;&lt;![CDATA[function(i18n, $rootScope) {

    return {
        template:   '&lt;div ng-repeat="page in pages track by $index" ng-if="(isMobile &amp;&amp; (c.state == $index || (c.state == 0 &amp;&amp; pagination == \'none\')))  || (!isMobile &amp;&amp; ((c.state == $index || (c.state == 0 &amp;&amp; pagination == \'none\')) || data.isKioskSurvey))"&gt;' +
						 '&lt;div class="assessable-record" ng-if="pagination != \'none\'  &amp;&amp; (data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\') " &gt;' +
                                '&lt;h3 class="assessable-record-text"&gt;'+
									'{{::page.assessableRecord.asrName}}'+ 
								'&lt;/h3&gt;&lt;/div&gt;' +
                        '&lt;div class="panel-heading survey-heading" ng-if="pagination != \'none\' || $index == 0 &amp;&amp; !data.isKioskSurvey"&gt;' +
                            '&lt;h3 class="survey-heading-text"&gt;' +
                                '&lt;a ng-if="::data.trigger_id &amp;&amp; (data.evaluation_method == \'survey\' || data.evaluation_method == \'quiz\') " class="survey-heading" style="font-weight: 100;" href="?id=ticket&amp;table={{::data.trigger_table}}&amp;sys_id={{::data.trigger_id}}"&gt;{{::data.trigger_display}}&amp;nbsp;&lt;/a&gt;' +
                                '&lt;span ng-if="pagination == \'none\'"&gt;{{::data.title}}&lt;/span&gt;' +
                                '&lt;span ng-if="pagination != \'none\'"&gt;{{page.display}}&amp;nbsp;&lt;/span&gt;'+
                            '&lt;/h3&gt;' +
							'&lt;span class="category-description" ng-if="(pagination != \'none\') &amp;amp;&amp;amp; (page.catDesc &amp;amp;&amp;amp; page.catDesc.length)" &gt;{{::page.catDesc}}&lt;/span&gt;'+
						'&lt;/div&gt;' +
						'&lt;div class="text-center intro-text" ng-class="{\'wrapper-md\': !data.isKioskSurvey}" ng-style="{\'margin-top\':data.isKioskSurvey ? \'15px\' : \'\'}" ng-if= "data.one_click_survey == \'true\' &amp;&amp; data.introduction"&gt;' +
							'&lt;span ng-bind-html="::data.introduction"&gt;&lt;/span&gt;' +
						'&lt;/div&gt;' +
'&lt;div ng-class="{\'wrapper-md\': !data.isKioskSurvey}" ng-if="((!data.asr[page.assessableRecord.asrId].collapsed) || page.showAsrName == \'true\' || pagination != \'none\')"&gt;' +
                            '&lt;!-- Category collapse - show only in no-pagination case --&gt;' +
							'&lt;div class="" ng-if="pagination == \'none\' &amp;&amp; pages.length &gt; 1 &amp;&amp; (data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\') &amp;amp;&amp;amp; page.showAsrName == \'true\'" &gt;' +
                                '&lt;h3 class="col-xs-11 category-label"&gt;'+
									'{{::page.assessableRecord.asrName}}'+ 
								'&lt;/h3&gt;' +
                                '&lt;h3 class="col-xs-1 text-right"&gt;' +
                                    '&lt;a ng-if="!data.asr[page.assessableRecord.asrId].collapsed" href="javascript:void(0)"&gt;&lt;span class="glyphicon glyphicon-menu-down" ng-click="data.asr[page.assessableRecord.asrId].collapsed = true"&gt;&lt;/span&gt;&lt;/a&gt;' +
                                    '&lt;a ng-if="data.asr[page.assessableRecord.asrId].collapsed" href="javascript:void(0)"&gt;&lt;span class="glyphicon glyphicon-menu-right" ng-click="data.asr[page.assessableRecord.asrId].collapsed = false"&gt;&lt;/span&gt;&lt;/a&gt;' +
                                '&lt;/h3&gt;' +
                            '&lt;/div&gt;' +
                            '&lt;div class="wrapper-sm row" ng-if="pagination == \'none\' &amp;&amp; pages.length &gt; 1 &amp;&amp; !data.asr[page.assessableRecord.asrId].collapsed" ng-style="{\'border-top\': (($index &gt; 0 &amp;&amp; !(page.showAsrName == \'true\')) ? \'1px solid #e6e8ea\' : \'\'), \'margin-left\':(data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\') ? \'5px\' : \'\' }"&gt;' +
                                '&lt;h3 class="col-xs-11 category-label" ng-style="{\'font-size\':(data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\') ? \'1.5em\' : \'\' }"&gt;'+
                                '&lt;/span&gt;{{::page.display}}' +
								'&lt;/h3&gt;' +
                                '&lt;h3 class="col-xs-1 text-right"&gt;' +
                                    '&lt;a ng-if="!page.collapsed" href="javascript:void(0)"&gt;&lt;span class="glyphicon glyphicon-menu-down" ng-click="page.collapsed = true"&gt;&lt;/span&gt;&lt;/a&gt;' +
                                    '&lt;a ng-if="page.collapsed" href="javascript:void(0)"&gt;&lt;span class="glyphicon glyphicon-menu-right" ng-click="page.collapsed = false"&gt;&lt;/span&gt;&lt;/a&gt;' +
                                '&lt;/h3&gt;' +
									'&lt;span  style="margin-left:10px;" ng-if="(page.catDesc &amp;amp;&amp;amp; page.catDesc.length)"&gt;{{::page.catDesc}}&lt;/span&gt;'+
                            '&lt;/div&gt;' +
                            '&lt;div id="category-questions-{{::page.id}}" class="collapse" ng-class="(data.asr[page.assessableRecord.asrId].collapsed || page.collapsed) ? \'\' : \'in\'" ng-style="{\'margin-left\':(data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\') ? \'30px\' : \'\' }"&gt;' +
                                '&lt;div ng-repeat="id in page.questions track by $index" ng-init="field = data.questions.idMap[id]" ng-if="::(data.questions.idMap[id].type != \'template\' || data.questions.idMap[id].template.firstQuestion == true || isMobile)"&gt;' +
                                    '&lt;div class="wrapper-sm row" ng-class=" { \'text-center\': data.isKioskSurvey, \'form-group\': !data.isKioskSurvey }" style="margin-left: 0" ng-if="!field.depends_on || c.isAnyDependencySatisfied(field)"&gt;' +
                                        '&lt;h4 class="question-label" ng-if="field.type != \'checkbox\' &amp;&amp; field.type != \'signature\' &amp;&amp; field.type != \'template\' &amp;&amp; field.type != \'attachment\'"&gt;' +
                                            '&lt;span class="field-decorations"&gt;' +
                                                '&lt;span ng-show="field.mandatory" class="fa fa-asterisk mandatory" ng-class="{\'mandatory-filled\': c.isMandatoryFilled(field)}" title="{{::data.parameterizedMsgsMap.mandatory}}" style="padding-right: .25em" &gt;&lt;/span&gt;' +
                                                '&lt;span ng-repeat="decoration in field.decorations track by $index" class="decoration {{ decoration.icon }}" title="{{ decoration.text }}"&gt;&lt;/span&gt;' +
                                            '&lt;/span&gt;' +
                                            '{{::field.label}}' +
                                        '&lt;/h4&gt;' +
                                        '&lt;div class="details-text" ng-if="::field.details &amp;&amp; field.type != \'checkbox\' &amp;&amp; field.type != \'signature\' &amp;&amp; field.type != \'template\' &amp;&amp; field.type != \'attachment\'" ng-bind-html="field.details"&gt;&lt;/div&gt;' +
                                        '&lt;sp-survey-field ng-class=" { \'text-center\': data.isKioskSurvey } " field="field" data="data" c="c" mobile-prefix="mobilePrefix"&gt;&lt;/sp-survey-field&gt;' +
		                             '&lt;/div&gt; &lt;!-- end form-group --&gt;' +
                                '&lt;/div&gt; &lt;!-- end ng-repeat field in data.questions --&gt;' +
                            '&lt;/div&gt;' +
                        '&lt;/div&gt; &lt;!-- end wrapper-md --&gt;' +
                        '&lt;!-- Nav Buttons --&gt;' +
                        '&lt;div class="wrapper-md" ng-if="pagination != \'none\' || $index == pages.length - 1 &amp;&amp; !data.isKioskSurvey"&gt;' +
                            '&lt;div class="row"&gt;' +
                                '&lt;div class="col-xs-6 col-sm-4" ng-if="!isMobile || $index &gt; 0"&gt;' +
                                    '&lt;div class="wrapper-xs"&gt;' +
                                        '&lt;div ng-if="pagination == \'none\' || $index == 0"&gt;' +
                                        	'&lt;button class="btn btn-default hidden-xs" ng-click="cancel(page, c.state)"&gt;${Cancel}&lt;/button&gt;' +
                                        '&lt;/div&gt;' +
                                        '&lt;div ng-if="pagination != \'none\' &amp;&amp; $index &gt; 0"&gt;' +
                                            '&lt;button class="btn btn-default hidden-xs" ng-click="previousPage(c.state)"&gt;${Previous}&lt;/button&gt;' +
                                            '&lt;button class="btn btn-default btn-block btn-lg visible-xs" ng-click="previousPage(c.state)"&gt;${Previous}&lt;/button&gt;' +
                                        '&lt;/div&gt;' +
                                    '&lt;/div&gt;' +
                                '&lt;/div&gt;' +
                                '&lt;div class="col-xs-6 col-sm-8 text-right" ng-class="(pagination != \'none\' &amp;&amp; $index &gt; 0) ? \'\' : \'col-xs-12\'"&gt;' +
                                    '&lt;div class="wrapper-xs hidden-xs" ng-if="!c.isPublic" style="display:inline-block"&gt;' +
										'&lt;div ng-if="pagination == \'none\' || isLastPage(page)"&gt;' +
											'&lt;button class="btn btn-default" ng-click="save(page, c.state)"&gt;${Save}&lt;/button&gt;' +
										'&lt;/div&gt;' +
                                    '&lt;/div&gt;' +
                                    '&lt;div class="wrapper-xs" ng-style="{\'display\': (!isMobile ? \'inline-block\' : \'\')}"&gt;' +
                                        '&lt;div ng-if="pagination != \'none\' &amp;&amp; !isLastPage(page)"&gt;' +
                                            '&lt;button class="btn btn-primary hidden-xs" ng-click="nextPage(page, c.state)" ng-disabled="disableNextButton(page)"&gt;${Next}&lt;/button&gt;' +
                                            '&lt;button class="btn btn-primary btn-block btn-lg visible-xs" ng-click="nextPage(page, c.state)" ng-disabled="disableNextButton(page)"&gt;${Next}&lt;/button&gt;' +
                                        '&lt;/div&gt;' +
                                        '&lt;div ng-if="pagination == \'none\' || isLastPage(page)"&gt;' +
                                            '&lt;button class="btn btn-primary hidden-xs" ng-click="submit(page, c.state)" ng-disabled="disableNextButton(page)"&gt;${Submit}&lt;/button&gt;' +
                                            '&lt;button class="btn btn-primary btn-block btn-lg visible-xs" ng-click="submit(page, c.state)" ng-disabled="disableNextButton(page)"&gt;${Submit}&lt;/button&gt;' +
                                        '&lt;/div&gt;' +
                                    '&lt;/div&gt;' +
                                '&lt;/div&gt;' +
                            '&lt;/div&gt;' +
                        '&lt;/div&gt;' +
                    '&lt;/div&gt; &lt;!-- end ng-repeat category in data.categories --&gt;' +
                    '&lt;!-- Survey thank you page --&gt;' +
                    '&lt;div class="wrapper-md" ng-if="(c.state == pages.length) &amp;&amp; data.successMessage &amp;&amp; data.successMessage.length  &amp;&amp; (!data.isKioskSurvey || isMobile)"&gt;' +
                        '&lt;div class="text-center intro-text"&gt;' +
							'&lt;div class="wrapper-sm"&gt;' +
                               '&lt;div class="outer-circle"&gt;'+   
									'&lt;span class = "intro-icon-assessment survey-icon glyphicon icon-article-document"ng-if="(data.evaluation_method == \'assessment\' || data.evaluation_method == \'attestation_v2\' || data.evaluation_method == \'risk_assessment\')"&gt;&lt;/span&gt;'+
									'&lt;span ng-if="(data.evaluation_method == \'survey\' || data.evaluation_method == \'quiz\')" class="survey-icon glyphicon icon-form"&gt;&lt;/span&gt;'+
								'&lt;/div&gt;'+
                            '&lt;/div&gt;' +
                        '&lt;/div&gt;' +
                        '&lt;div class="wrapper-sm text-center"&gt;' +
                            '&lt;h4 class="description-text" ng-bind-html="data.successMessage"&gt;&lt;/h4&gt;' +
                        '&lt;/div&gt;' +
                    '&lt;/div&gt;',

        scope: {
            pagination: '=',
            isMobile: '=',
            data: '=',
            c: '='
		},

        controller: function($scope) {
			
            var init = function() {
            	$scope.mobilePrefix = "mobile-";
				$scope.pages = [];

				if($scope.c.data.evaluation_method == 'assessment' || $scope.c.data.evaluation_method == 'attestation_v2' || $scope.c.data.evaluation_method == 'risk_assessment'){
					if ($scope.pagination == 'question')
							 $scope.pages = $scope.c.data.questions.idList.map(function(qid) {return {id: qid, questions: [qid], display: $scope.c.data.questions.idMap[qid].category.display, catDesc: $scope.c.data.questions.idMap[qid].category.description,assessableRecord: $scope.c.data.questions.idMap[qid].assessableRecord}});
					
					else if ($scope.pagination == 'category')
						$scope.pages = $scope.c.data.categories.idList.map(function(catid) {
							var obj = $scope.c.data.categories.idMap[catid];
							return {id: catid, display: obj.display, questions: obj.questions,
							catDesc: obj.description, assessableRecord: obj.assessableRecord};	
                    });
					
					else
						$scope.pages = $scope.c.data.categories.idList.map(function(catid) {
							var obj = $scope.c.data.categories.idMap[catid];
							return {id: catid, display: obj.display, questions: obj.questions,
							catDesc: obj.description, assessableRecord: obj.assessableRecord,showAsrName: obj.showAsrName};	
                    });
				}
				
				else{
					if ($scope.pagination == 'question')
						$scope.pages = $scope.c.data.questions.idList.map(function(qid) {return {id: qid, questions: [qid], catDesc: $scope.c.data.questions.idMap[qid].category.description,display: $scope.c.data.questions.idMap[qid].category.display}});		
					
					else
						$scope.pages = $scope.c.data.categories.idList.map(function(catid) {
							var category = $scope.c.data.categories.idMap[catid];
							return {id: catid, display: category.display, catDesc: category.description,questions: category.questions};
						});
				}
				

                var signature = $scope.c.data.signature;
                if (signature &amp;&amp; !$scope.c.isPublic) {
                    if ($scope.pagination == 'none')
                        $scope.pages[$scope.pages.length - 1].questions.push(signature.sys_id);
                    else
                        $scope.pages.push({id: signature.sys_id, display: $scope.c.data.title, questions: [signature.sys_id]});

                    $scope.c.data.questions.idMap[signature.sys_id] = {
                        type: 'signature',
                        name: 'signature_result',
                        label: signature.label,
                        value: signature.value,
                        sys_id: signature.sys_id,
                        signType: signature.type,
                        depends_on: ''
                    };
                }
            };
            init();

            var mapReduceAllTrue = function(questions, callback) {
                return questions.map(function(qid) {
                    return callback($scope.c.data.questions.idMap[qid]);
                }).reduce(function(x, y) {
                    return x &amp;&amp; y;
                }, true);
            };

            var disableNextButtonHelper = function(page) {
                if (!page || !page.questions || !page.questions.length)
                    return true;

                return !$scope.isPageValid(page) || !$scope.isPageMandatoryFilled(page);
            };
			
            $scope.disableNextButton = function(page) {
                if ($scope.pagination == 'none')
                    return $scope.pages.map(function(x) {return disableNextButtonHelper(x)})
                                .reduce(function(x, y) {return x || y}, false);
                return disableNextButtonHelper(page);
            };

            // Returns true if all questions within this page have a valid response
            var isPageValidHelper = function(page) {
                return mapReduceAllTrue(page.questions, function(question) {return !question.invalidValue});
            };
			
            $scope.isPageValid = function(page) {
                if ($scope.pagination == 'none')
                    return $scope.pages.map(function(x) {return isPageValidHelper(x)})
                                    .reduce(function(x, y) {return x &amp;&amp; y}, true);
                return isPageValidHelper(page);
            };

            $scope.isSignatureFilled = function(page) {
                if ($scope.pagination != 'none' &amp;&amp; !page.questions.reduce(function(x, y) {return x || $scope.c.data.questions.idMap[y].type == 'signature'}, false))
                    return true;

                var signature = $scope.data.signature;
                if (!signature || signature.type == 'assertion_only')
                    return true;

                if (signature.type == 'full_name' &amp;&amp; !signature.validated) {
                    signature.validationCallback = function(validated) {
                        if (validated)
                            $scope.submit(page, $scope.c.state);
                        else
                            $scope.c.showSignatureMessage();
                    };
                    $scope.c.showSignatureAuthModal();
                    return false;
                }

                if (signature.type == 'checkbox') {
                    if ($scope.c.data.questions.idMap[signature.sys_id].value != 'true')
                        return false;
                    else
                        $scope.c.data.questions.idMap[signature.sys_id].value = 'checked';
                }

                return true;
            };

            // Returns true if all mandatory questions within this page are filled
            var isPageMandatoryFilledHelper = function(page) {
                var questionsList = page.questions.concat([]);
                if (!$scope.isMobile)
                    page.questions.forEach(function(qid) {
                        var question = $scope.c.data.questions.idMap[qid];
                        if (question.type == 'template' &amp;&amp; question.template.firstQuestion) {
                            var templateGroup = $scope.c.data.templateGroups[question.templateGroup];
                            questionsList = questionsList.concat(templateGroup.questions.filter(function(tid) {return tid != qid;}));
                        }
                    });
                return mapReduceAllTrue(questionsList, function(question) {return !question.mandatory || $scope.c.isMandatoryFilled(question)});
            };

            $scope.isPageMandatoryFilled = function(page) {
                if ($scope.pagination == 'none')
                    return $scope.pages.map(function(x){return isPageMandatoryFilledHelper(x)})
                                    .reduce(function(x, y) {return x &amp;&amp; y}, true);
                return isPageMandatoryFilledHelper(page);
            };

            // Saves questions
            var saveCurrentQuestions = function(questions, action, updateSuccessMessage) {
                var formdata = {"sysparm_instance_id": $scope.c.data.instanceId, "sysparm_action": action};
                questions.forEach(function(qid) { $scope.c.updateQuestion(qid, formdata) });
                formdata['percent_answered'] = $scope.c.getPercentAnswered();
                if (!!updateSuccessMessage)
                    formdata['updateSuccessMessage'] = true;
                $scope.c.submitAjax(formdata);
            };
			
            // Saves questions on current page or all pages depending on pagination setting
            $scope.saveCurrentPage = function(page, action, updateSuccessMessage) {
                if ($scope.pagination == 'none')
                    return saveCurrentQuestions($scope.pages.reduce(function(p1, p2) {return p1.concat(p2.questions)}, []), action, updateSuccessMessage);
                else if ($scope.pagination == 'question' &amp;&amp; !$scope.isMobile) {
                    var question = $scope.data.questions.idMap[page.questions[0]];
                    if (question.type == 'template')
                        return saveCurrentQuestions($scope.data.templateGroups[question.templateGroup].questions, action, updateSuccessMessage);
                }
                return saveCurrentQuestions(page.questions, action, updateSuccessMessage);
            };

            // Get the next (or) previous navigable page
            var nextNavigablePage = function(state, forwardDirection) {
                var current = state;
                while (1) {
                    // Get next value within bounds
                    current = forwardDirection ? current + 1 : current - 1;

                    if (current &lt;= 0)
                        return 0;

                    if (current &gt;= $scope.pages.length)
                        return $scope.pages.length;

                    if (!$scope.isMobile &amp;&amp; mapReduceAllTrue($scope.pages[current].questions, function(q) {return q.template &amp;&amp; !q.template.firstQuestion}))
                        continue;

                    if (mapReduceAllTrue($scope.pages[current].questions, function(question) {return !!question.depends_on &amp;&amp; !$scope.c.isAnyDependencySatisfied(question)})) {
                        if (current == $scope.pages.length - 1)
                            return state;
                    } else
                        return current;
                }
            };

            var doValidations = function(page, saveAndExit) {
                if (!$scope.isPageValid(page)) {
                    $scope.c.showInvalidResponseMessage();
                    return false;
                }

                if (!saveAndExit &amp;&amp; !$scope.isPageMandatoryFilled(page)) {
                    $scope.c.showMandatoryMessage();
                    return false;
                }

                if (!saveAndExit &amp;&amp; !$scope.isSignatureFilled(page)) {
                    if ($scope.c.data.signature.type != 'full_name')
                        $scope.c.showSignatureMessage();
                    return false;
                }

                return true;
            };

            var nextPageHelper = function(page, state, action, showSuccessMessage) {
                // Clear any existing messages
                $scope.c.hideInlineErrorMessage();
				
                // Always skip validation if clicking cancel button
                if (action != 'cancel') {
                    // Only do the validations if the user is not trying to save &amp; exit
                    var saveAndExit = (action == 'save' &amp;&amp; showSuccessMessage);

                    if ($scope.pagination == 'none') {
                        if ($scope.pages.reduce(function (x, y) {return x || !doValidations(y, saveAndExit)}, false))
                            return false;
                    } else {
                        if (!doValidations(page, saveAndExit))
                            return false;
                    }
                }

                // Save page
                $scope.saveCurrentPage(page, action, !!showSuccessMessage);

                // Navigate to the next page
                if (!!showSuccessMessage)
                    $scope.c.state = $scope.pages.length;
                else
                    $scope.c.state = nextNavigablePage(state, true);

                // Scroll to the top
                $('section.page').scrollTop(0);
            };

            $scope.nextPage = function(page, state) {
				nextPageHelper(page, state, 'save');
            };
			
			$scope.submit = function(page,state) {
				nextPageHelper(page, state, 'submit', true);
			};
			
			$rootScope.submit = function(page, state) {
				nextPageHelper(page, state, 'submit', true);
            };

            $scope.save = function(page, state) {
                nextPageHelper(page, state, 'save', true);
            };
            
            $scope.cancel = function(page, state) {
                nextPageHelper(page, state, 'cancel', true);
            };

            $scope.previousPage = function(state) {
                $scope.c.state = nextNavigablePage(state, false);

                // Scroll to the top
                $('section.page').scrollTop(0);
            };

           $scope.isLastPage = function(page) {
                var retVal = true;
                var i;
                if ($scope.c.state == $scope.pages.length - 1)
                    return retVal;
				var question = $scope.data.questions.idMap[page.questions[0]];
				var tmpGroup = question.templateGroup;
                if(!$scope.isMobile 
				   &amp;&amp; $scope.pagination == 'question' 
				   &amp;&amp; question.type == 'template'){
					var numQuestionsOnTemplate = $scope.c.data.templateGroups[tmpGroup].questions.length;
					if($scope.c.state == $scope.pages.length-numQuestionsOnTemplate)
						return retVal;
				}
                for (i=$scope.c.state + 1; i&lt;$scope.pages.length; i++) {
                    var nextPage = $scope.pages[i];

                    if (!mapReduceAllTrue(nextPage.questions, function(question) {return !!question.depends_on &amp;&amp; !$scope.c.isAnyDependencySatisfied(question)})) {
                        retVal = false;
                        break;
                    }
                }

                return retVal;
            };
        }
    }
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sp_angular_provider&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-15 19:01:42&lt;/sys_created_on&gt;&lt;sys_id&gt;aaf3cd03c3602200943974e1c1d3ae87&lt;/sys_id&gt;&lt;sys_mod_count&gt;383&lt;/sys_mod_count&gt;&lt;sys_name&gt;spSurveyForm&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal Surveys" source="sn_portal_surveys"&gt;67ac5062db10220035417878f0b8f5c4&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Service Portal Surveys"&gt;67ac5062db10220035417878f0b8f5c4&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_angular_provider_aaf3cd03c3602200943974e1c1d3ae87&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;fernando.souza&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-04-11 12:37:58&lt;/sys_updated_on&gt;&lt;type&gt;directive&lt;/type&gt;&lt;/sp_angular_provider&gt;&lt;/record_update&gt;</payload>
<payload_hash>447874203</payload_hash>
<remote_update_set display_value="Default">8a3b6ff23705730002c87e5004990e00</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2019-04-30 14:01:05</sys_created_on>
<sys_id>8e3b6ff23705730002c87e5004990e00</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>16a0c679e2c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2019-04-30 14:01:05</sys_updated_on>
<table/>
<target_name>spSurveyForm</target_name>
<type>Widget Angular Provider</type>
<update_domain>global</update_domain>
<update_guid>67f1617cfd3cf3000e8dff4cd870da4b</update_guid>
<update_guid_history>67f1617cfd3cf3000e8dff4cd870da4b:447874203,b49b51b4ef3cf300202e62fb67122ef2:-1321572977,3de4bb6022f4f3008db6476c74d5f526:447874203,95b02b68c474f3008ad465fd4b2b5064:170602193,7f706ba82374f3007bf1ce2a4f9ab885:-1496003356,1210ab280874f300b46b513582ce1d49:-1026380314,26c45fa4e534f300977f6b9621f69e5c:1228505923,a7e3d728fa34f3002a17e28a5cc91bbb:-1275078277,25d053286b34f300c41d013673fd7ca8:43433734,d600d7a47d34f300b0e7c3d5286df3de:-1334808996,8beec364e634f300cf85db3cd182f9e5:-1782333127,256b8b60a734f300bdaac52ade862882:-1296667705,7f2a4b20df34f300fa9f2da2711fff5a:-1621204282,2fe9cfece3f0f3005dfba79facbd4378:-743822710,dfc94bec19f0f300261907f62c8a16c7:-1582651747,87790320ce34f30022cefab636d86335:340457314,f609cfacf9f0f3002ba8882a292e5213:660398738,ee6843acfef0f30038f1acd4aca1eeb1:-983874969,9bf787ac48f0f300e7076c9c8634721f:1006608639,c2768f2c16f0f3004348ae6a1686367d:-831116631,ebd5432cedf0f3003b2266f431ed00da:-60037350,aba48b6840f0f3008f339b15ae149d0e:-831116631,173347e40cf0f3004414949eda8b26e6:-320175053,933347e4c4f0f300dd1996fc5e7faae4:-1936368800</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
